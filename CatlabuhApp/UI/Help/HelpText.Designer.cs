//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CatlabuhApp.UI.Help {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class HelpText {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal HelpText() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CatlabuhApp.UI.Help.HelpText", typeof(HelpText).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Auto fill
        ///
        ///When this function is enabled: the values entered in the cell of the first column will be written in the cell of the second column located one line above. Conversely, the cell value of the second column will be written in the cell of the first, but in the line below..
        /// </summary>
        internal static string autoFillingText_EN {
            get {
                return ResourceManager.GetString("autoFillingText_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Автоматическое заполнение
        ///
        ///При включении этой функции: значения, введенные в ячейку первого столбца, будут записаны в ячейку второго столбца, расположенного на строку выше. И наоборот, значение ячейки второго столбца будет записано в ячейку первого, но строкой ниже..
        /// </summary>
        internal static string autoFillingText_RU {
            get {
                return ResourceManager.GetString("autoFillingText_RU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Автоматичне заповнення
        ///
        ///При включенні цієї функції: значення, введені в осередок першого стовпця, будуть записані в осередок другого стовпця, розміщеного на рядок вище. І навпаки, значення осередку другого стовпця буде записано в осередок першого, але рядком нижче..
        /// </summary>
        internal static string autoFillingText_UA {
            get {
                return ResourceManager.GetString("autoFillingText_UA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Calculation
        ///
        ///To carry out the calculation, you must call the &quot;Set up a new calculation&quot; form. In the form you need to enter or select the calculation year, fill in all the fields of the form with the input data and click &quot;Calculate&quot; on the LMB. After that, the output will be calculated which can be viewed in the &quot;Main window&quot; on the page &quot;Calculations&quot;. If the DFSH is involved in the calculation, then you need to check the corresponding window, then enter all the necessary data and select the calculation  [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string calculateText_EN {
            get {
                return ResourceManager.GetString("calculateText_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Проведение расчета
        ///
        ///Для проведения расчета надо вызвать форму &quot;Настройка нового расчета&quot;. В форме нужно ввести или выбрать год расчета, заполнить все поля формы входными данными и нажать ЛКМ пункт &quot;Рассчитать&quot;. После чего будет проведен расчет выходных данных, которые можно будет посмотреть в &quot;Главном окне&quot; на странице &quot;Расчеты&quot;. Если в расчете участвует ДГРШ, то надо поставить галочку в соответствующем окне, после чего ввести все необходимые данные и выбрать способ расчета:
        ///Форма ДРГШ &gt; Панель инструмен [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string calculateText_RU {
            get {
                return ResourceManager.GetString("calculateText_RU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Проведення розрахунку
        ///
        ///Для проведення розрахунку треба викликати форму &quot;Налаштування нового розрахунку&quot;. У формі потрібно ввести або обрати рік розрахунку, заповнити всі поля форми вхідними даними і натиснути ЛКМ пункт &quot;Розрахувати&quot;. Після чого буде проведено розрахунок вихідних даних, які можна буде переглянути у &quot;Головному вікні&quot; на сторінці &quot;Розрахунки&quot;. Якщо у розрахунку бере участь ДГРШ, то треба поставити галочку у відповідному вікні, після чого ввести всі необхідні дані і обрати метод розрахунку:
        /// [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string calculateText_UA {
            get {
                return ResourceManager.GetString("calculateText_UA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CalculationView_ContextMenuStrip {
            get {
                object obj = ResourceManager.GetObject("CalculationView_ContextMenuStrip", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CalculationView_ToolStrip {
            get {
                object obj = ResourceManager.GetObject("CalculationView_ToolStrip", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap CalculationView1 {
            get {
                object obj = ResourceManager.GetObject("CalculationView1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ChartSetup_1 {
            get {
                object obj = ResourceManager.GetObject("ChartSetup_1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Chart Setup
        ///
        ///To configure a chart before building it, you need to specify parameters for the X axis and parameters for the Y axis.
        ///The parameters of the X axis are time (years/months), and the parameters of the Y axis can be percentages or sums of calculation parameters if you build for years, or units of measurement for calculation parameters if you choose construction for months.
        ///For the X axis, select the type of chart (for years or for months), then add the elements of the X axis. Added elements can [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string chartSetupText_EN {
            get {
                return ResourceManager.GetString("chartSetupText_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Настройка параметров диаграммы
        ///
        ///Чтобы настроить диаграмму перед ее построением, надо указать параметры для оси Х и параметры для оси Y.
        ///Параметрами оси Х является время (годы/месяцы), а параметрами оси Y могут быть проценты или суммы параметров расчета, если выбрано построение для лет, или единицы измерения параметров расчета, если выбрано построение для месяцев.
        ///Для оси Х следует выбрать тип диаграммы (для лет или для месяцев), после чего надо добавить элементы оси Х. Добавленные элементы можно увидеть [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string chartSetupText_RU {
            get {
                return ResourceManager.GetString("chartSetupText_RU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Налаштування параметрів діаграми
        ///
        ///Щоб налаштувати діаграму перед її побудовою, треба вказати параметри для вісі Х і параметри для вісі Y.
        ///Параметрами вісі Х є час (роки/місяці), а параметрами вісі Y можуть бути відсотки або суми параметрів розрахунку, якщо обрана побудова для років, або одиниці вимірювання параметрів розрахунку, якщо обрана побудова для місяців. 
        ///Для вісі Х слід обрати тип діаграми(для років чи для місяців), після чого треба додати елементи вісі Х. Додані елементи можна побачити нижче у [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string chartSetupText_UA {
            get {
                return ResourceManager.GetString("chartSetupText_UA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ChartStyleDiaog_1 {
            get {
                object obj = ResourceManager.GetObject("ChartStyleDiaog_1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ChartStyleDiaog_2 {
            get {
                object obj = ResourceManager.GetObject("ChartStyleDiaog_2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ChartStyleDiaog_3 {
            get {
                object obj = ResourceManager.GetObject("ChartStyleDiaog_3", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap ChartView_ToolStrip {
            get {
                object obj = ResourceManager.GetObject("ChartView_ToolStrip", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Field cleaning
        ///
        ///To clear the fields, click on the &quot;Clear fields&quot; item on the toolbar LMB, after which all input data fields will be cleared..
        /// </summary>
        internal static string clearFieldsText_EN {
            get {
                return ResourceManager.GetString("clearFieldsText_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Очистка полей
        ///
        ///Чтобы очистить поля, надо на панели инструментов нажать ЛКМ пункт &quot;Очистить поля&quot;, после чего будут очищены все поля входных данных..
        /// </summary>
        internal static string clearFieldsText_RU {
            get {
                return ResourceManager.GetString("clearFieldsText_RU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Очищення полів
        ///
        ///Щоб очистити поля, треба на панелі інструментів натиснути ЛКМ пункт &quot;Очистити поля&quot;, після чого будуть очищені всі поля вхідних даних..
        /// </summary>
        internal static string clearFieldsText_UA {
            get {
                return ResourceManager.GetString("clearFieldsText_UA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create a new calculation
        ///
        ///To create a new calculation, click on the &quot;Create new calculation&quot; item on the toolbar LMB, after which a form will be called up to fill in the calculation input data.
        ///In the form, you must enter the input data and the year of calculation in the corresponding field, after which you need to click &quot;Save input data&quot;. Thus, a new calculation will be created with the data that was specified during the save..
        /// </summary>
        internal static string createCalcText_EN {
            get {
                return ResourceManager.GetString("createCalcText_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Создание нового расчета
        ///
        ///Чтобы создать новый расчет, надо на панели инструментов нажать ЛКМ пункт &quot;Создать новый расчет&quot;, после чего будет вызвана форма для заполнения входными данными расчета.
        ///В форме необходимо ввести входные данные и год расчета в соответствующем поле, после чего надо нажать ЛКМ пункт &quot;Сохранить входные данные&quot;. Таким образом будет создан новый расчет с теми данными, которые были указаны при сохранении..
        /// </summary>
        internal static string createCalcText_RU {
            get {
                return ResourceManager.GetString("createCalcText_RU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Створення нового розрахунку
        ///
        ///Щоб створити новий розрахунок, треба на панелі інструментів натиснути ЛКМ пункт &quot;Створити новий розрахунок&quot;, після чого буде викликана форма для заповнення вхідними даними розрахунку.
        ///У формі треба ввести вхідні дані і рік розрахунку у відповідному полі, після чого треба натиснути ЛКМ пункт &quot;Зберегти вхідні дані&quot;. Таким чином буде створено новий розрахунок з тими даними, які були вказані при збереженні..
        /// </summary>
        internal static string createCalcText_UA {
            get {
                return ResourceManager.GetString("createCalcText_UA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Create a new chart
        ///
        ///To create a new chart, click on the &quot;Create a new chart&quot; item on the toolbar of the chart viewing page. As a result, the &quot;Configure New Chart&quot; dialog box will appear.
        ///In this window, select the chart parameters for the X and Y axes..
        /// </summary>
        internal static string createChartText_EN {
            get {
                return ResourceManager.GetString("createChartText_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Создание новой диаграммы
        ///
        ///Для создания новой диаграммы надо на панели инструментов страницы просмотра диаграммы нажать ЛКМ пункт &quot;Создать новую диаграмму&quot;. В результате будет вызвано диалоговое окно &quot;Настройка новой диаграммы&quot;.
        ///В этом окне надо выбрать параметры диаграммы для осей X и Y..
        /// </summary>
        internal static string createChartText_RU {
            get {
                return ResourceManager.GetString("createChartText_RU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Створення нової діаграми
        ///
        ///Для створення нової діаграми треба на панелі інструментів сторінки перегляду діаграми натиснути ЛКМ пункт &quot;Створити нову діаграму&quot;. В результаті буде викликано діалогове вікно &quot;Налаштування нової діаграми&quot;. 
        ///В цьому вікні треба обрати параметри діаграми для вісей Х і Y..
        /// </summary>
        internal static string createChartText_UA {
            get {
                return ResourceManager.GetString("createChartText_UA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Delete calculation
        ///
        ///To delete a calculation, on the page for viewing calculations, click RMB to open the context menu. In this menu, select and click &quot;Delete calculation&quot;, after which the current calculation will be deleted..
        /// </summary>
        internal static string deleteCalcText_EN {
            get {
                return ResourceManager.GetString("deleteCalcText_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Удаление расчета
        ///
        ///Чтобы удалить расчет, надо на странице просмотра расчетов нажать ПКМ, чтобы вызвать контекстное меню. В этом меню выбираем и нажимаем пункт &quot;Удалить расчет&quot;, после чего удаляется текущий расчет..
        /// </summary>
        internal static string deleteCalcText_RU {
            get {
                return ResourceManager.GetString("deleteCalcText_RU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Видалення розрахунку
        ///
        ///Щоб видалити розрахунок, треба на сторінці перегляду розрахунків натиснути ПКМ, щоб викликати контекстне меню. У цьому меню обираємо і натискаємо пункт &quot;Видалити розрахунок&quot;, після чого буде видалено поточний розрахунок..
        /// </summary>
        internal static string deleteCalcText_UA {
            get {
                return ResourceManager.GetString("deleteCalcText_UA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Export calculation to Excel
        ///
        ///To export the calculation, click on the &quot;Export to Excel&quot; item on the page for viewing calculations on the LMB toolbar. After that, a dialog box will be called in which you need to select the current calculation tables that require export. When your choice is made, you need to click the &quot;Export&quot; button.
        ///At the end of the export, Microsoft Excel will be launched with the selected calculation tables..
        /// </summary>
        internal static string exportCalcText_EN {
            get {
                return ResourceManager.GetString("exportCalcText_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Экспорт расчета в Excel
        ///
        ///Для экспорта расчета надо на странице просмотра расчетов на панели инструментов ЛКМ нажать пункт &quot;Экспорт в Excel&quot;. После чего будет вызвано диалоговое окно, в котором нужно выбрать таблицы текущего расчета, требующие экспорта. Сделав свой выбор, нужно нажать кнопку &quot;Экспорт&quot;.
        ///По окончании экспорта будет запущено приложение Microsoft Excel с выбранными таблицами расчета..
        /// </summary>
        internal static string exportCalcText_RU {
            get {
                return ResourceManager.GetString("exportCalcText_RU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Експорт розрахунку до Excel
        ///
        ///Для експорту розрахунку треба на сторінці перегляду розрахунків на панелі інструментів ЛКМ натиснути пункт &quot;Експорт до Excel&quot;. Після чого буде викликано діалогове вікно, у якому треба обрати таблиці поточного розрахунку, що потребують експорту. Зробивши свій вибір, потрібно натиснути кнопку &quot;Експорт&quot;.
        ///По закінченню експорту буде запущено додаток Microsoft Excel з обраними таблицями розрахунку..
        /// </summary>
        internal static string exportCalcText_UA {
            get {
                return ResourceManager.GetString("exportCalcText_UA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Export chart to Excel
        ///
        ///To export a chart to Excel, you need to select the item “Export to Excel” on the toolbar of the chart viewing page in the “Tools” section and click LMC. After that, the chart will be exported to Excel..
        /// </summary>
        internal static string exportChartText_EN {
            get {
                return ResourceManager.GetString("exportChartText_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Экспорт диаграммы в Excel
        ///
        ///Чтобы экспортировать диаграмму в Excel, надо на панели инструментов страницы просмотра диаграммы в пункте &quot;Инструменты&quot;, выбрать и нажать ЛКМ пункт &quot;Экспорт в Excel». После чего диаграмма будет экспортирована в Excel..
        /// </summary>
        internal static string exportChartText_RU {
            get {
                return ResourceManager.GetString("exportChartText_RU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Експорт діаграми до Excel
        ///
        ///Щоб експортувати діаграму до Excel, треба на панелі інструментів сторінки перегляду діаграми у пункті &quot;Інструменти&quot;, обрати і натиснути ЛКМ пункт &quot;Експорт до Excel&quot;. Після чого діаграму буде експортовано до Excel..
        /// </summary>
        internal static string exportChartText_UA {
            get {
                return ResourceManager.GetString("exportChartText_UA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap GatewayScheduleSetup_ToolStrip {
            get {
                object obj = ResourceManager.GetObject("GatewayScheduleSetup_ToolStrip", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на DSWG
        ///
        ///The Dispetcher Schedule of Work Gateway is one of the parts of the calculation input that is involved in the calculation.
        ///To fill the DGRS data and to choose the method of its calculation, it is necessary to call the appropriate form.
        ///This can be done from two places:
        ///    1. From the Calculation Views page, by clicking LKM, select &quot;Show Gateway Schedule&quot;.
        ///    2. From the &quot;New Settlement Setting&quot; form, select the appropriate box.
        ///
        ///DSWG data can be saved by clicking LMB on the item &quot;Save data&quot;.        /// [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string gatewayScheduleText_EN {
            get {
                return ResourceManager.GetString("gatewayScheduleText_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ДГРШ
        ///
        ///Диспетчерский График Работы Шлюзов - одна из частей входных данных расчета, которая участвует в проведении расчета. 
        ///Для заполнения ДГРШ данными и выбора метода его расчета надо вызвать соответствующую форму.
        ///Это можно сделать из двух мест:
        ///    1. Со страницы просмотра расчетов, нажав ЛКМ пункт &quot;Показать ДГРШ&quot;.
        ///    2. С формы &quot;Настройка нового расчета&quot;, поставив галочку в соответствующем окне.
        ///
        ///Данные ДГРШ можно сохранить нажав ЛКМ пункт &quot;Сохранить данные&quot;.
        ///Чтобы просмотреть данные ДГРШ, надо [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string gatewayScheduleText_RU {
            get {
                return ResourceManager.GetString("gatewayScheduleText_RU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ДГРШ
        ///
        ///Диспетчерський Графік Роботи Шлюзів - є однією з частин вхідних даних розрахунку, яка бере участь у проведені розрахунку. 
        ///Для заповнення ДГРШ даними і обрання методу його розрахунку треба викликати відповідну форму. 
        ///Це можна зробити з двох місць:
        ///    1. Зі сторінки перегляду розрахунків, натиснувши ЛКМ пункт &quot;Показати ДГРШ&quot;.
        ///    2. З форми &quot;Налаштування нового розрахунку&quot;, поставивши галочку у відповідному вікні.
        ///
        ///Дані ДГРШ можна зберегти натиснувши ЛКМ пункт &quot;Зберегти дані&quot;.
        ///Щоб переглянут [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string gatewayScheduleText_UA {
            get {
                return ResourceManager.GetString("gatewayScheduleText_UA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap InputDataSetup1 {
            get {
                object obj = ResourceManager.GetObject("InputDataSetup1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap MainForm_MenuStrip {
            get {
                object obj = ResourceManager.GetObject("MainForm_MenuStrip", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap RecalculateDialog1 {
            get {
                object obj = ResourceManager.GetObject("RecalculateDialog1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Recalculation of the calculation
        ///
        ///If you need to compute a calculation that already exists, there are two ways to solve this problem:
        ///    1. To bring up the menu of accounts on the page of calculations view by pressing RBM. Select and press the item &quot;Recalculate&quot;. After that, a dialog box will be chosen to select the calculation parameters. After setting the parameters, click the &quot;Calculate&quot; button. As a result, the current calculation will be recalculated and saved.
        ///    2. On the Calculation Review pag [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string recalculateText_EN {
            get {
                return ResourceManager.GetString("recalculateText_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Перерасчет расчета
        ///
        ///Если нужно провести расчет расчета, который уже существует, то имеется два пути решения этой проблемы:
        ///    1. Вызвать на странице просмотра расчетов контекстное меню, нажав ПКМ. Выбрать и нажать пункт &quot;Пересчитать&quot;. После чего будет вызвано диалоговое окно с выбором параметров расчетов. После настройки параметров надо нажать кнопку &quot;Рассчитать&quot;. В результате будет произведен перерасчет и сохранение текущего расчета.
        ///    2. На странице просмотра расчетов надо нажать пункт панели инстр [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string recalculateText_RU {
            get {
                return ResourceManager.GetString("recalculateText_RU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Перерахунок розрахунку
        ///
        ///Якщо потрібно провести розрахунок розрахунку, який вже існує, то є два шляхи вирішення цієї проблеми:
        ///    1. Викликати на сторінці перегляду розрахунків контекстне меню, натиснувши ПКМ. Обрати і натиснути пункт &quot;Перерахувати&quot;. Після чого буде викликано діалогове вікно з обранням параметрів розрахунків. Після налаштування параметрів треба натиснути кнопку &quot;Розрахувати&quot;. В результаті буде проведено перерахунок і збереження поточного розрахунку.
        ///    2. На сторінці перегляду розрахун [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string recalculateText_UA {
            get {
                return ResourceManager.GetString("recalculateText_UA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Change and save calculation data
        ///
        ///To change the calculation data, it is necessary to change the value to the desired value on the page for viewing calculations in the box of the calculation table in the coffe box and press Enter. After that, you need to call the context menu by clicking RMB and click &quot;Save Changes&quot;. As a result, all changes made will be saved..
        /// </summary>
        internal static string saveChangesText_EN {
            get {
                return ResourceManager.GetString("saveChangesText_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Изменение и сохранение данных расчета
        ///
        ///Для изменения данных расчета, надо на странице просмотра расчетов в ячейке любой таблицы расчета изменить значение на нужное и нажать Enter. После чего нужно вызвать контекстное меню, нажав ПКМ, и нажать пункт &quot;Сохранить изменения&quot;. В результате чего все внесенные изменения будут сохранены..
        /// </summary>
        internal static string saveChangesText_RU {
            get {
                return ResourceManager.GetString("saveChangesText_RU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Змінення і збереження даних розрахунку
        ///
        ///Для змінення даних розрахунку, треба на сторінці перегляду розрахунків в осередку будь якої таблиці розрахунку змінити значення на потрібне і натиснути Enter. Після чого потрібно викликати контекстне меню, натиснувши ПКМ, і натиснути пункт &quot;Зберегти зміни&quot;. В результаті чого всі внесені зміни будуть збережені..
        /// </summary>
        internal static string saveChangesText_UA {
            get {
                return ResourceManager.GetString("saveChangesText_UA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save the chart
        ///
        ///To save the chart, you need to select and click Save as Image in the chart view toolbar in the Tools section. The chart will then be saved to a .png image file..
        /// </summary>
        internal static string saveChartText_EN {
            get {
                return ResourceManager.GetString("saveChartText_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сохранение диаграммы
        ///
        ///Чтобы сохранить диаграмму, надо на панели инструментов страницы просмотра диаграммы в пункте &quot;Инструменты&quot;, выбрать и нажать ЛКМ пункт &quot;Сохранить как изображение&quot;. После чего диаграмма будет сохранена в графическом файле с расширением .png..
        /// </summary>
        internal static string saveChartText_RU {
            get {
                return ResourceManager.GetString("saveChartText_RU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Збереження діаграми
        ///
        ///Щоб зберегти діаграму, треба на панелі інструментів сторінки перегляду діаграми у пункті &quot;Інструменти&quot;, обрати і натиснути ЛКМ пункт &quot;Зберегти як зображення&quot;. Після чого діаграма буде збережена у графічному файлі з розширенням .png..
        /// </summary>
        internal static string saveChartText_UA {
            get {
                return ResourceManager.GetString("saveChartText_UA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save the input
        ///
        ///To save the calculation input, in the &quot;New calculation setup&quot; window in the toolbar click &quot;Save input data&quot;. The input will then be saved..
        /// </summary>
        internal static string saveInputDataText_EN {
            get {
                return ResourceManager.GetString("saveInputDataText_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сохранение входных данных
        ///
        ///Чтобы сохранить входные данные расчета нужно в окне &quot;Настройка нового расчета&quot; на панели инструментов нажать ЛКМ пункт &quot;Сохранить входные данные&quot;. После чего входные данные будут сохранены..
        /// </summary>
        internal static string saveInputDataText_RU {
            get {
                return ResourceManager.GetString("saveInputDataText_RU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Збереження вхідних даних
        ///
        ///Щоб зберегти вхідні дані розрахунку потрібно у вікні &quot;Налаштування нового розрахунку&quot; на панелі інструментів натиснути ЛКМ пункт &quot;Зберегти вхідні дані&quot;. Після чого вхідні дані будуть збережені..
        /// </summary>
        internal static string saveInputDataText_UA {
            get {
                return ResourceManager.GetString("saveInputDataText_UA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Settings
        ///
        ///In order to configure the application, select the &quot;Settings&quot; item in the &quot;Main Menu&quot; and click LMB on it. Then the page for viewing the settings will be called up. The page has two tabs: &quot;General Settings&quot; and &quot;Settlement Setup&quot;.
        ///
        ///In the tab &quot;General Settings&quot; you can change:
        ///    1. The path to the SQLite database file.
        ///    2. The path to the directory with Excel calculation files.
        ///    3. The path to the directory with Excel chart files.
        ///    4. Path to the directory with diagram image file [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string settingsText_EN {
            get {
                return ResourceManager.GetString("settingsText_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Настройки
        ///
        ///Для того чтобы настроить приложение надо в &quot;Главном меню&quot; выбрать пункт &quot;Настройка&quot; и нажать по нему ЛКМ. После чего будет вызвана страница просмотра настроек. Страница имеет две вкладки: &quot;Общие настройки&quot; и &quot;Настройка расчета&quot;.
        ///
        ///Во вкладке &quot;Общие настройки&quot; можно изменить:
        ///    1. Путь к файлу базы данных SQLite.
        ///    2. Путь к директории с Excel-файлами расчетов.
        ///    3. Путь к директории с Excel-файлами диаграмм.
        ///    4. Путь к директории с файлами изображений диаграмм.
        ///    5. Язык прилож [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string settingsText_RU {
            get {
                return ResourceManager.GetString("settingsText_RU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Налаштування
        ///
        ///Для того щоб налаштувати додаток треба у &quot;Головному меню&quot; обрати пункт &quot;Налаштування&quot; і натиснути по ньому ЛКМ. Після чого буде викликана сторінка перегляду налаштувань. Сторінка має дві вкладки: &quot;Загальні налаштування&quot; і &quot;Налаштування розрахунку&quot;.
        ///
        ///У вкладці &quot;Загальні налаштування&quot; можна змінити:
        ///    1. Шлях до файлу бази даних SQLite.
        ///    2. Шлях до директорії з Excel-файлами розрахунків.
        ///    3. Шлях до директорії з Excel-файлами діаграм.
        ///    4. Шлях до директорії з файлами зображень [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string settingsText_UA {
            get {
                return ResourceManager.GetString("settingsText_UA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap SettingsView_1 {
            get {
                object obj = ResourceManager.GetObject("SettingsView_1", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap SettingsView_2 {
            get {
                object obj = ResourceManager.GetObject("SettingsView_2", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Beginning of work
        ///
        ///CatlabuhApp is designed to calculate the water and salt balances of Lake Catlabuh.
        ///
        ///After the program starts, the home page is displayed by default.
        ///To move between the display pages in the application there is a &quot;Main menu&quot; which is located on top.
        ///The &quot;Main menu&quot; consists of six items (from left to right):
        ///    1. Start page;
        ///    2. Calculations;
        ///    3. Charts;
        ///    4. Customization;
        ///    5. Help;
        ///    6. Exit.
        ///
        ///Clicking on LMB on the first four points will bring up the corres [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string startWorkText_EN {
            get {
                return ResourceManager.GetString("startWorkText_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Начало работы
        ///
        ///CatlabuhApp разработана для проведения расчетов водного и солевого балансов озера Катлабух.
        ///
        ///После запуска программы по умолчанию отображается домашняя страница.
        ///Для перемещения между страницами отображения в приложении присутствует &quot;Главное меню&quot;, которое расположено сверху.
        ///&quot;Главное меню&quot; состоит из шести пунктов(слева направо):
        ///    1. Начальная страница;
        ///    2. Расчеты;
        ///    3. Диаграммы;
        ///    4. Настройка;
        ///    5. Справка;
        ///    6. Выход.
        ///
        ///Нажатие ЛКМ по первым четырем пунктам, в [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string startWorkText_RU {
            get {
                return ResourceManager.GetString("startWorkText_RU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Початок роботи
        ///
        ///CatlabuhApp розроблена для проведення розрахунків водного і сольового балансів озера Катлабух.
        ///
        ///Після запуску програми за умовчуванням відображається домашня сторінка.
        ///Для пересування між сторінками відображення у додатку присутнє &quot;Головне меню&quot;, що розташовано зверху.
        ///&quot;Головне меню&quot; складається з шести пунктів(зліва направо):
        ///    1. Початкова сторінка;
        ///    2. Розрахунки;
        ///    3. Діаграми;
        ///    4. Налаштування;
        ///    5. Довідка;
        ///    6. Вихід.
        ///
        ///Натискання ЛКМ по перших чотирьох пунк [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string startWorkText_UA {
            get {
                return ResourceManager.GetString("startWorkText_UA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Chart view customization
        ///
        ///To customize the chart view, you need to click &quot;Chart View&quot; on the toolbar of the chart view page. The &quot;Customize Chart View&quot; dialog box appears. Please note that the chart view can only be edited after building the chart!
        ///In the window, you can edit the headers of the axes and the chart itself, the grid of the chart area and the series of the chart.
        ///For the changes to take effect, click the &quot;Apply&quot; button..
        /// </summary>
        internal static string styleChartText_EN {
            get {
                return ResourceManager.GetString("styleChartText_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Настройка вида диаграммы
        ///
        ///Для настройки вида диаграммы, надо на панели инструментов страницы просмотра диаграммы нажать ЛКМ пункт &quot;Вид диаграммы&quot;. Появится диалоговое окно &quot;Настройка вида диаграммы&quot;. Обратите внимание на то, что вид диаграммы можно редактировать только после построения диаграммы!
        ///В окне можно редактировать заголовки осей и самой диаграммы, сетку области диаграммы и ряды диаграммы.
        ///Чтобы изменения вступили в силу нужно нажать кнопку &quot;Применить&quot;..
        /// </summary>
        internal static string styleChartText_RU {
            get {
                return ResourceManager.GetString("styleChartText_RU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Налаштування виду діаграми
        ///
        ///Для налаштування виду діаграми, треба на панелі інструментів сторінки перегляду діаграми натиснути ЛКМ пункт &quot;Вид діаграми&quot;. З&apos;явиться діалогове вікно &quot;Налаштування вигляду діаграми&quot;. Зверніть увагу на те, що вигляд діаграми можна редагувати тільки після побудови діаграми! 
        ///У вікні можна редагувати: заголовки вісей і самої діаграми, сітку області діаграми і ряди діаграми.
        ///Щоб зміни вступили в силу треба натиснути кнопку &quot;Застосувати&quot;..
        /// </summary>
        internal static string styleChartText_UA {
            get {
                return ResourceManager.GetString("styleChartText_UA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на View calculation
        ///
        ///In order to view the calculation data, you need to select the calculation year of interest in the drop-down list on the toolbar below the &quot;Main menu&quot;, after which the data will be loaded into four tables, which are located in pairs in the &quot;Water balance&quot; and &quot;Salt balance&quot; tabs .
        ///Switching between these tabs, you can view the calculation data..
        /// </summary>
        internal static string viewCalcText_EN {
            get {
                return ResourceManager.GetString("viewCalcText_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Просмотр расчета
        ///
        ///Для того чтобы просмотреть данные расчета, надо на панели инструментов, расположенной ниже &quot;Главного меню&quot;, в выпадающем списке выбрать интересующий год расчета, после чего данные будут загружены в четыре таблицы, которые расположены попарно во вкладках &quot;Водный баланс&quot; и &quot;Солевой баланс&quot;.
        ///Переключаясь между этими вкладками можно просматривать данные расчета..
        /// </summary>
        internal static string viewCalcText_RU {
            get {
                return ResourceManager.GetString("viewCalcText_RU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Перегляд розрахунку
        ///
        ///Для того щоб переглянути дані розрахунку, треба на панелі інструментів, що розташована нижче &quot;Головного меню&quot;, у випадаючому списку обрати рік розрахунку, що цікавить, після чого дані будуть завантажені у чотири таблиці, які розташовані попарно у вкладках &quot;Водний баланс&quot; і &quot;Сольовий баланс&quot;.
        ///Перемикаючись між цими вкладками можна переглядати дані розрахунку..
        /// </summary>
        internal static string viewCalcText_UA {
            get {
                return ResourceManager.GetString("viewCalcText_UA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на View chart
        ///
        ///In order to view the chart, in the &quot;Main Menu&quot;, click on the &quot;Charts&quot; item, then the page for viewing the chart will be called up..
        /// </summary>
        internal static string viewChartText_EN {
            get {
                return ResourceManager.GetString("viewChartText_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Просмотр диаграммы
        ///
        ///Для того чтобы просмотреть диаграмму надо в &quot;Главном меню&quot; нажать ЛКМ пункт &quot;Диаграммы&quot;, после чего будет вызвана страница для просмотра диаграммы..
        /// </summary>
        internal static string viewChartText_RU {
            get {
                return ResourceManager.GetString("viewChartText_RU", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Перегляд діаграми
        ///
        ///Для того щоб переглянути діаграму треба у &quot;Головному меню&quot; натиснути ЛКМ пункт &quot;Діаграми&quot;, після чого буде викликано сторінку для перегляду діаграми..
        /// </summary>
        internal static string viewChartText_UA {
            get {
                return ResourceManager.GetString("viewChartText_UA", resourceCulture);
            }
        }
    }
}
